/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.ImportBUS;
import BUS.InvoiceBUS;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.text.FieldPosition;
import java.text.NumberFormat;
import java.text.ParsePosition;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;

/**
 *
 * @author voota
 */
public class JPanelStatistics extends javax.swing.JPanel {

    private final InvoiceBUS invoiceBUS;
    private final ImportBUS importBUS;

    /**
     * Creates new form JPanelStatistics
     */
    public JPanelStatistics() {
        invoiceBUS = new InvoiceBUS();
        importBUS = new ImportBUS();
        initComponents();
        chartInvoice();
        chartImport();
        this.setSize(960, 700);
        this.setVisible(true);
    }

    public final void chartImport() {
        // Tạo biểu đồ thống kê
        JFreeChart chart = importBUS.createImportChart();

        // Lấy trục y từ biểu đồ
        NumberAxis yAxis = (NumberAxis) chart.getCategoryPlot().getRangeAxis();

        // Định dạng trục y với đơn vị "triệu VND"
        NumberFormat currencyFormat = NumberFormat.getNumberInstance();
        yAxis.setNumberFormatOverride(new NumberFormat() {
            @Override
            public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos) {
                // Chia giá trị trên trục y cho 1 triệu
                return toAppendTo.append(currencyFormat.format(number)).append(" triệu VND");
            }

            @Override
            public StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos) {
                return format((double) number, toAppendTo, pos);
            }

            @Override
            public Number parse(String source, ParsePosition parsePosition) {
                return null; // Không cần thiết cho trường hợp này
            }
        });

        // Tạo ChartPanel từ biểu đồ
        ChartPanel chartPanel = new ChartPanel(chart);
        int width = 960; // Chiều rộng mong muốn
        int height = 325; // Chiều cao mong muốn
        chartPanel.setPreferredSize(new Dimension(width, height));

        // Thêm ChartPanel vào panel1
        panel1.setLayout(new BorderLayout()); // Thiết lập layout manager cho panel1
        panel1.add(chartPanel, BorderLayout.CENTER); // Thêm ChartPanel vào panel1

        // Cập nhật lại hiển thị của panel1
        panel1.revalidate();
        panel1.repaint();
    }

    public final void chartInvoice() {
        // Tạo biểu đồ thống kê
        JFreeChart chart = invoiceBUS.createChart();

        // Lấy trục y từ biểu đồ
        NumberAxis yAxis = (NumberAxis) chart.getCategoryPlot().getRangeAxis();

        // Định dạng trục y với đơn vị "triệu VND"
        NumberFormat currencyFormat = NumberFormat.getNumberInstance();
        yAxis.setNumberFormatOverride(new NumberFormat() {
            @Override
            public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos) {
                // Chia giá trị trên trục y cho 1 triệu
                number = number / 1_000_000;
                return toAppendTo.append(currencyFormat.format(number)).append(" triệu VND");
            }

            @Override
            public StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition pos) {
                return format((double) number, toAppendTo, pos);
            }

            @Override
            public Number parse(String source, ParsePosition parsePosition) {
                return null; // Không cần thiết cho trường hợp này
            }
        });

        // Tạo ChartPanel từ biểu đồ
        ChartPanel chartPanel = new ChartPanel(chart);
        int width = 960; // Chiều rộng mong muốn
        int height = 325; // Chiều cao mong muốn
        chartPanel.setPreferredSize(new Dimension(width, height));

        // Thêm ChartPanel vào panel2
        panel2.setLayout(new BorderLayout()); // Thiết lập layout manager cho panel2
        panel2.add(chartPanel, BorderLayout.CENTER); // Thêm ChartPanel vào panel2
        panel2.setSize(960, 300);

        // Cập nhật lại hiển thị của panel2
        panel2.revalidate();
        panel2.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        panel2.setPreferredSize(new java.awt.Dimension(100, 340));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    // End of variables declaration//GEN-END:variables
}
